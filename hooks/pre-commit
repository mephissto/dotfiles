#!/bin/bash
# pre-commit script
# William DURAND <william.durand1@gmail.com>

# Configuration
PHP=php
JS_LINTER=gjslint
JS_LINTER_ARGS="--strict --custom_jsdoc_tags 'api,memberOf'"
DISABLE_JS_LINTER=`git config hooks.disablejslint`

# Exit the script if any statement returns a non-true return value
set -e

# Functions
function msg() {
    echo "[pre-commit] $1"
}
function error() {
    echo -e "[pre-commit] \\033[1;31m$1"
    tput sgr0
    exit 1
}

# Get the files that will be committed
files=`git diff --cached --name-only --diff-filter=ACM`

msg 'Check the syntax, fix permissions and clean files.'

for f in $files ; do
    if [ -f "$f" ] ; then
        # Check PHP, abort commit if syntax error
        if builtin type -p $PHP &> /dev/null && [[ "$f" =~ .+\.php$ ]] ; then
            $PHP -l "$f" > /dev/null || error "PHP syntax error detected in '$f', abort !"
        fi

        # Check PHP code
        if [[ "$f" =~ .+\.php$ ]] ; then
            if [ `egrep -i "die\(|var_dump\(|print_r\(" $f | wc -l` -gt 0 ] ; then
                error "PHP possibility error detected in '$f', abort !"
            fi
        fi

        # Check JavaScript, abort commit if syntax error
        if [ ! $DISABLE_JS_LINTER ] &&  builtin type -p "$JS_LINTER" &> /dev/null && [[ "$f" =~ .+\.js$ ]] ; then
            $JS_LINTER $JS_LINTER_ARGS "$f" | grep --color=never -e '^[Line|Found]' && error "JavaScript syntax error detected in '$f', abort !"
        fi

        # Fix permissions
        chmod 644 "$f"

        # Don't clean images, it could break them
        if [[ ! "$f" =~ .+\.(ico|png|gif|jpg|jpeg)$ ]] ; then
            # Remove trailing whitespaces
            sed -i 's/[[:space:]]*$//' "$f"
            # Remove ^M
            sed -i -e '//d' "$f"
        fi

        # Re-add the file to the git index
        git add "$f"
    fi
done

msg 'Success.'
